"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var router_1 = require("nativescript-angular/router");
var login_component_1 = require("./login/login.component");
var register_component_1 = require("./register/register.component");
var home_component_1 = require("./home/home.component");
var friendlist_component_1 = require("./home/friendlist/friendlist.component");
var friendmatching_component_1 = require("./home/friendmatching/friendmatching.component");
var friendchat_component_1 = require("./home/friendchat/friendchat.component");
var chat_room_component_1 = require("./home/friendchat/chat-room/chat-room.component");
var ideamatching_component_1 = require("./home/ideamatching/ideamatching.component");
var searchresult_component_1 = require("./home/searchresult/searchresult.component");
var details_component_1 = require("./home/searchresult/details/details.component");
var enneagram_component_1 = require("./home/enneagram/enneagram.component");
var map_example_component_1 = require("./home/friendmatching/map-example/map-example.component");
var blog_component_1 = require("./home/blog/blog.component");
var profile_input_component_1 = require("./home/profile-input/profile-input.component");
var setting_component_1 = require("./home/setting/setting.component");
var searchoption_component_1 = require("./home/searchoption/searchoption.component");
var friendadd_component_1 = require("./home/friendadd/friendadd.component");
var routes = [
    { path: "", redirectTo: "login", pathMatch: "full" },
    { path: "home", redirectTo: "/home/(friendlistoutlet:friendlist//friendchatoutlet:friendchat//friendmatchingoutlet:friendmatching//ideamatchingoutlet:ideamatching)", pathMatch: "full" },
    {
        path: 'home', component: home_component_1.HomeComponent, children: [
            { path: 'friendlist', component: friendlist_component_1.FriendlistComponent, outlet: 'friendlistoutlet' },
            { path: 'friendchat', component: friendchat_component_1.FriendchatComponent, outlet: 'friendchatoutlet' },
            { path: 'friendmatching', component: friendmatching_component_1.FriendmatchingComponent, outlet: 'friendmatchingoutlet' },
            { path: 'ideamatching', component: ideamatching_component_1.IdeamatchingComponent, outlet: 'ideamatchingoutlet' },
        ]
    },
    { path: "login", component: login_component_1.LoginComponent },
    { path: "register", component: register_component_1.RegisterComponent },
    { path: "details", component: details_component_1.DetailsComponent },
    { path: "chatroom", component: chat_room_component_1.ChatRoomComponent },
    { path: 'enneagram', component: enneagram_component_1.EnneagramComponent },
    { path: 'map', component: map_example_component_1.MapExampleComponent },
    { path: 'blog', component: blog_component_1.BlogComponent },
    { path: 'ideamatching', component: ideamatching_component_1.IdeamatchingComponent },
    { path: 'searchresult', component: searchresult_component_1.SearchResultComponent },
    { path: 'searchoption', component: searchoption_component_1.SearchOptionComponent },
    { path: 'friendadd', component: friendadd_component_1.FriendaddComponent },
    { path: 'profile-input', component: profile_input_component_1.ProfileInputComponent },
    { path: 'setting', component: setting_component_1.SettingComponent }
];
var AppRoutingModule = /** @class */ (function () {
    function AppRoutingModule() {
    }
    AppRoutingModule = __decorate([
        core_1.NgModule({
            imports: [router_1.NativeScriptRouterModule.forRoot(routes)],
            exports: [router_1.NativeScriptRouterModule]
        })
    ], AppRoutingModule);
    return AppRoutingModule;
}());
exports.AppRoutingModule = AppRoutingModule;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLXJvdXRpbmcubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLXJvdXRpbmcubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQXlDO0FBRXpDLHNEQUF1RTtBQUN2RSwyREFBeUQ7QUFDekQsb0VBQWtFO0FBQ2xFLHdEQUFzRDtBQUN0RCwrRUFBNkU7QUFDN0UsMkZBQXlGO0FBQ3pGLCtFQUE2RTtBQUM3RSx1RkFBb0Y7QUFDcEYscUZBQW1GO0FBQ25GLHFGQUFtRjtBQUNuRixtRkFBaUY7QUFDakYsNEVBQTBFO0FBQzFFLGlHQUE4RjtBQUM5Riw2REFBMkQ7QUFDM0Qsd0ZBQXFGO0FBQ3JGLHNFQUFvRTtBQUNwRSxxRkFBbUY7QUFDbkYsNEVBQTBFO0FBQzFFLElBQU0sTUFBTSxHQUFXO0lBQ25CLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUU7SUFDcEQsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSx3SUFBd0ksRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFO0lBQ3pMO1FBQ0ksSUFBSSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsOEJBQWEsRUFBRSxRQUFRLEVBQUU7WUFDOUMsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSwwQ0FBbUIsRUFBRSxNQUFNLEVBQUUsa0JBQWtCLEVBQUU7WUFDbEYsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSwwQ0FBbUIsRUFBRSxNQUFNLEVBQUUsa0JBQWtCLEVBQUU7WUFDbEYsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLGtEQUF1QixFQUFFLE1BQU0sRUFBRSxzQkFBc0IsRUFBRTtZQUM5RixFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsU0FBUyxFQUFFLDhDQUFxQixFQUFFLE1BQU0sRUFBRSxvQkFBb0IsRUFBRTtTQUUzRjtLQUNKO0lBQ0QsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxnQ0FBYyxFQUFFO0lBQzVDLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsc0NBQWlCLEVBQUU7SUFDbEQsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxvQ0FBZ0IsRUFBRTtJQUNoRCxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLHVDQUFpQixFQUFFO0lBQ2xELEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsd0NBQWtCLEVBQUU7SUFDcEQsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSwyQ0FBbUIsRUFBRTtJQUMvQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLDhCQUFhLEVBQUM7SUFDekMsRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLFNBQVMsRUFBRSw4Q0FBcUIsRUFBRTtJQUMxRCxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsU0FBUyxFQUFFLDhDQUFxQixFQUFFO0lBQzFELEVBQUUsSUFBSSxFQUFFLGNBQWMsRUFBRSxTQUFTLEVBQUUsOENBQXFCLEVBQUU7SUFDMUQsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSx3Q0FBa0IsRUFBQztJQUNuRCxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsU0FBUyxFQUFFLCtDQUFxQixFQUFDO0lBQzFELEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsb0NBQWdCLEVBQUM7Q0FDbEQsQ0FBQztBQU9GO0lBQUE7SUFBZ0MsQ0FBQztJQUFwQixnQkFBZ0I7UUFKNUIsZUFBUSxDQUFDO1lBQ04sT0FBTyxFQUFFLENBQUMsaUNBQXdCLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ25ELE9BQU8sRUFBRSxDQUFDLGlDQUF3QixDQUFDO1NBQ3RDLENBQUM7T0FDVyxnQkFBZ0IsQ0FBSTtJQUFELHVCQUFDO0NBQUEsQUFBakMsSUFBaUM7QUFBcEIsNENBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBSb3V0ZXMgfSBmcm9tIFwiQGFuZ3VsYXIvcm91dGVyXCI7XHJcbmltcG9ydCB7IE5hdGl2ZVNjcmlwdFJvdXRlck1vZHVsZSB9IGZyb20gXCJuYXRpdmVzY3JpcHQtYW5ndWxhci9yb3V0ZXJcIjtcclxuaW1wb3J0IHsgTG9naW5Db21wb25lbnQgfSBmcm9tIFwiLi9sb2dpbi9sb2dpbi5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgUmVnaXN0ZXJDb21wb25lbnQgfSBmcm9tIFwiLi9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgSG9tZUNvbXBvbmVudCB9IGZyb20gXCIuL2hvbWUvaG9tZS5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgRnJpZW5kbGlzdENvbXBvbmVudCB9IGZyb20gXCIuL2hvbWUvZnJpZW5kbGlzdC9mcmllbmRsaXN0LmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBGcmllbmRtYXRjaGluZ0NvbXBvbmVudCB9IGZyb20gXCIuL2hvbWUvZnJpZW5kbWF0Y2hpbmcvZnJpZW5kbWF0Y2hpbmcuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IEZyaWVuZGNoYXRDb21wb25lbnQgfSBmcm9tIFwiLi9ob21lL2ZyaWVuZGNoYXQvZnJpZW5kY2hhdC5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgQ2hhdFJvb21Db21wb25lbnQgfSBmcm9tIFwiLi9ob21lL2ZyaWVuZGNoYXQvY2hhdC1yb29tL2NoYXQtcm9vbS5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgSWRlYW1hdGNoaW5nQ29tcG9uZW50IH0gZnJvbSBcIi4vaG9tZS9pZGVhbWF0Y2hpbmcvaWRlYW1hdGNoaW5nLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBTZWFyY2hSZXN1bHRDb21wb25lbnQgfSBmcm9tIFwiLi9ob21lL3NlYXJjaHJlc3VsdC9zZWFyY2hyZXN1bHQuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IERldGFpbHNDb21wb25lbnQgfSBmcm9tIFwiLi9ob21lL3NlYXJjaHJlc3VsdC9kZXRhaWxzL2RldGFpbHMuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IEVubmVhZ3JhbUNvbXBvbmVudCB9IGZyb20gXCIuL2hvbWUvZW5uZWFncmFtL2VubmVhZ3JhbS5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgTWFwRXhhbXBsZUNvbXBvbmVudCB9IGZyb20gXCIuL2hvbWUvZnJpZW5kbWF0Y2hpbmcvbWFwLWV4YW1wbGUvbWFwLWV4YW1wbGUuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IEJsb2dDb21wb25lbnQgfSBmcm9tIFwiLi9ob21lL2Jsb2cvYmxvZy5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgUHJvZmlsZUlucHV0Q29tcG9uZW50IH0gZnJvbSBcIi4vaG9tZS9wcm9maWxlLWlucHV0L3Byb2ZpbGUtaW5wdXQuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IFNldHRpbmdDb21wb25lbnQgfSBmcm9tIFwiLi9ob21lL3NldHRpbmcvc2V0dGluZy5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgU2VhcmNoT3B0aW9uQ29tcG9uZW50IH0gZnJvbSBcIi4vaG9tZS9zZWFyY2hvcHRpb24vc2VhcmNob3B0aW9uLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBGcmllbmRhZGRDb21wb25lbnQgfSBmcm9tIFwiLi9ob21lL2ZyaWVuZGFkZC9mcmllbmRhZGQuY29tcG9uZW50XCI7XHJcbmNvbnN0IHJvdXRlczogUm91dGVzID0gW1xyXG4gICAgeyBwYXRoOiBcIlwiLCByZWRpcmVjdFRvOiBcImxvZ2luXCIsIHBhdGhNYXRjaDogXCJmdWxsXCIgfSxcclxuICAgIHsgcGF0aDogXCJob21lXCIsIHJlZGlyZWN0VG86IFwiL2hvbWUvKGZyaWVuZGxpc3RvdXRsZXQ6ZnJpZW5kbGlzdC8vZnJpZW5kY2hhdG91dGxldDpmcmllbmRjaGF0Ly9mcmllbmRtYXRjaGluZ291dGxldDpmcmllbmRtYXRjaGluZy8vaWRlYW1hdGNoaW5nb3V0bGV0OmlkZWFtYXRjaGluZylcIiwgcGF0aE1hdGNoOiBcImZ1bGxcIiB9LFxyXG4gICAge1xyXG4gICAgICAgIHBhdGg6ICdob21lJywgY29tcG9uZW50OiBIb21lQ29tcG9uZW50LCBjaGlsZHJlbjogW1xyXG4gICAgICAgICAgICB7IHBhdGg6ICdmcmllbmRsaXN0JywgY29tcG9uZW50OiBGcmllbmRsaXN0Q29tcG9uZW50LCBvdXRsZXQ6ICdmcmllbmRsaXN0b3V0bGV0JyB9LFxyXG4gICAgICAgICAgICB7IHBhdGg6ICdmcmllbmRjaGF0JywgY29tcG9uZW50OiBGcmllbmRjaGF0Q29tcG9uZW50LCBvdXRsZXQ6ICdmcmllbmRjaGF0b3V0bGV0JyB9LFxyXG4gICAgICAgICAgICB7IHBhdGg6ICdmcmllbmRtYXRjaGluZycsIGNvbXBvbmVudDogRnJpZW5kbWF0Y2hpbmdDb21wb25lbnQsIG91dGxldDogJ2ZyaWVuZG1hdGNoaW5nb3V0bGV0JyB9LFxyXG4gICAgICAgICAgICB7IHBhdGg6ICdpZGVhbWF0Y2hpbmcnLCBjb21wb25lbnQ6IElkZWFtYXRjaGluZ0NvbXBvbmVudCwgb3V0bGV0OiAnaWRlYW1hdGNoaW5nb3V0bGV0JyB9LFxyXG4gICAgICAgICAgICAvLyB7IHBhdGg6ICdpZGVhbWF0Y2hpbmcnLCBjb21wb25lbnQ6IE1hcEV4YW1wbGVDb21wb25lbnQsIG91dGxldDogJ2lkZWFtYXRjaGluZ291dGxldCcgfSxcclxuICAgICAgICBdXHJcbiAgICB9LFxyXG4gICAgeyBwYXRoOiBcImxvZ2luXCIsIGNvbXBvbmVudDogTG9naW5Db21wb25lbnQgfSxcclxuICAgIHsgcGF0aDogXCJyZWdpc3RlclwiLCBjb21wb25lbnQ6IFJlZ2lzdGVyQ29tcG9uZW50IH0sXHJcbiAgICB7IHBhdGg6IFwiZGV0YWlsc1wiLCBjb21wb25lbnQ6IERldGFpbHNDb21wb25lbnQgfSxcclxuICAgIHsgcGF0aDogXCJjaGF0cm9vbVwiLCBjb21wb25lbnQ6IENoYXRSb29tQ29tcG9uZW50IH0sXHJcbiAgICB7IHBhdGg6ICdlbm5lYWdyYW0nLCBjb21wb25lbnQ6IEVubmVhZ3JhbUNvbXBvbmVudCB9LFxyXG4gICAgeyBwYXRoOiAnbWFwJywgY29tcG9uZW50OiBNYXBFeGFtcGxlQ29tcG9uZW50IH0sXHJcbiAgICB7IHBhdGg6ICdibG9nJywgY29tcG9uZW50OiBCbG9nQ29tcG9uZW50fSxcclxuICAgIHsgcGF0aDogJ2lkZWFtYXRjaGluZycsIGNvbXBvbmVudDogSWRlYW1hdGNoaW5nQ29tcG9uZW50IH0sXHJcbiAgICB7IHBhdGg6ICdzZWFyY2hyZXN1bHQnLCBjb21wb25lbnQ6IFNlYXJjaFJlc3VsdENvbXBvbmVudCB9LFxyXG4gICAgeyBwYXRoOiAnc2VhcmNob3B0aW9uJywgY29tcG9uZW50OiBTZWFyY2hPcHRpb25Db21wb25lbnQgfSxcclxuICAgIHsgcGF0aDogJ2ZyaWVuZGFkZCcsIGNvbXBvbmVudDogRnJpZW5kYWRkQ29tcG9uZW50fSxcclxuICAgIHsgcGF0aDogJ3Byb2ZpbGUtaW5wdXQnLCBjb21wb25lbnQ6IFByb2ZpbGVJbnB1dENvbXBvbmVudH0sXHJcbiAgICB7IHBhdGg6ICdzZXR0aW5nJywgY29tcG9uZW50OiBTZXR0aW5nQ29tcG9uZW50fVxyXG5dO1xyXG5cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlLmZvclJvb3Qocm91dGVzKV0sXHJcbiAgICBleHBvcnRzOiBbTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXBwUm91dGluZ01vZHVsZSB7IH1cclxuIl19